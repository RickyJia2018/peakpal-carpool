syntax = "proto3";

package pb;

import "google/api/annotations.proto";

import "rpc_trip.proto";

import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/rickyjia2018/peakpal-carpool/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Peak Pal API - Carpool server";
        version: "1.0";
        contact: {
            name: "Googuar Inc.";
            url: "https://googuar.com/";
            email: "support@googuar.com";
        };
    };
    schemes: [HTTP, HTTPS];  // Use an array of identifiers for HTTP and HTTPS
    // base_path: "/v1";
    security_definitions: {
        security: {
            key:"bearer"
            value:{
                type: TYPE_API_KEY,
                in: IN_HEADER,
                name: 'Authorization',
                description: "Authentication token, prefixed by Bearer: Bearer <token>",
            }
        }
    };
    security: {
        security_requirement: {
          key: "bearer"
        }
      };
};

service Carpool{
    rpc CreateTrip(CreateTripRequest) returns (CreateTripResponse){
        option (google.api.http) = {
            post: "/v1/create_trip"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a trip record";
            summary: "Create new Trip";
        };
    }
}